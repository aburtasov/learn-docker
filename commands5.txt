#----------------------------------------Команды для управления контейнерами------------------------------------------------------------------------------------------------

docker container my_command

Вот команды, которые могут быть подставлены туда, где мы использовали my_command:

    create — создание контейнера из образа.
    start — запуск существующего контейнера.
    run — создание контейнера и его запуск.
    ls — вывод списка работающих контейнеров.
    inspect — вывод подробной информации о контейнере.
    logs — вывод логов.
    stop — остановка работающего контейнера с отправкой главному процессу контейнера сигнала SIGTERM, и, через некоторое время, SIGKILL.
    kill — остановка работающего контейнера с отправкой главному процессу контейнера сигнала SIGKILL.
    rm — удаление остановленного контейнера.

#----------------------------------------Команды для управления образами-------------------------------------------------------------------------------------------------

docker image my_command

Вот некоторые из команд этой группы:

    build — сборка образа.
    push — отправка образа в удалённый реестр.
    ls — вывод списка образов.
    history — вывод сведений о слоях образа.
    inspect — вывод подробной информации об образе, в том числе — сведений о слоях.
    rm — удаление образа.

#----------------------------------------Разные команды--------------------------------------------------------------------------------------------------


    docker version — вывод сведений о версиях клиента и сервера Docker.
    docker login — вход в реестр Docker.
    docker system prune — удаление неиспользуемых контейнеров, сетей и образов, которым не назначено имя и тег.

#-------------------------------------------------Начало существования контейнера-----------------------------------------------------------------------------------------

docker container create my_repo/my_image:my_tag

docker container create -a STDIN my_image

docker container start my_container

Теперь взглянем на команду, которая позволяет создать и запустить контейнер:
docker container run my_image

docker container run -i -t -p 1000:8000 --rm my_image

#------------------------------------------Проверка состояния контейнера------------------------------------------------------------------------------------------------

docker container ls
docker container ls -a -s

docker container inspect my_container

docker container logs my_container

#------------------------------------------Завершение работы контейнера------------------------------------------------------------------------------------------------

docker container stop my_container

docker container kill my_container

docker container kill $(docker ps -q) 

docker container rm my_container

docker container rm $(docker ps -a -q)

#------------------------------------------Создание образов------------------------------------------------------------------------------------------------

docker image build -t my_repo/my_image:my_tag .

docker login

docker image push my_repo/my_image:my_tag

#------------------------------------------Исследование образов------------------------------------------------------------------------------------------------

docker image ls

docker image history my_image

docker image inspect my_image

#------------------------------------------Удаление образов------------------------------------------------------------------------------------------------

docker image rm my_image

docker image rm $(docker images -a -q) 

